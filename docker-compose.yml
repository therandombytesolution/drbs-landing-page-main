services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: drbs-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - drbs-network
    depends_on:
      - db
    environment:
      - APP_NAME=DRBS Landing Page
      - APP_ENV=production
      - APP_KEY=${APP_KEY:-base64:YXNkZmFzZGZhc2RmYXNkZmFzZGZhc2RmYXNkZmFzZGY=}
      - APP_DEBUG=false
      - APP_URL=https://drbs.theonedesk.site
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=drbs_db
      - DB_USERNAME=drbs_user
      - DB_PASSWORD=${DB_PASSWORD:-Pa$$w*rd@DanDrev029}
      - LOG_LEVEL=error
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETGID
      - SETUID
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: mysql:8.0
    container_name: drbs-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: drbs_db
      MYSQL_USER: drbs_user
      MYSQL_PASSWORD: ${DB_PASSWORD:-Pa$$w*rd@DanDrev029}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-Pa$$w*rd@DanDrev029}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    networks:
      - drbs-network
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-Pa$$w*rd@DanDrev029}"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 60s

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: drbs-cloudflare-tunnel
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN:-}
    networks:
      - drbs-network
    depends_on:
      - app
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    read_only: true
    environment:
      - NO_AUTOUPDATE=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://app:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  drbs-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
